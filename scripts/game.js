// Generated by CoffeeScript 1.6.3
/*global define*/


(function() {
  define(['store', 'jquery'], function(store, $) {
    'use strict';
    var Game;
    Game = function() {
      store.remove('winner');
      this.$game = $('.game');
      this.$game.on('click', 'td', this.mark);
      this.$game.on('marked', 'td', this.drawWinner);
      this.$game.on('clearGame', 'td', this.clearGame);
      if (!store.get('P1')) {
        store.set('P1', 0);
      }
      if (!store.get('P2')) {
        store.set('P2', 0);
      }
      $('.well span').text("P1(" + (store.get('P1')) + ") x P2(" + (store.get('P2')) + ")");
    };
    Game.prototype.clearGame = function() {
      if (confirm('Would you like to restart the game?')) {
        window.turn = 'X';
        return $('td').each(function() {
          $(this).attr('class', '');
          return $(this).text('');
        });
      }
    };
    Game.prototype.clearScore = function() {
      store.set('P1', 0);
      store.set('P2', 0);
      return $('.well span').text("P1(" + (store.get('P1')) + ") x P2(" + (store.get('P2')) + ")");
    };
    Game.prototype.drawWinner = function() {
      $('td').each(function(i) {
        var alert, column, winner;
        column = '';
        $("td:nth-child(" + i + "),td:nth-child(" + (i + 3) + "),td:nth-child(" + (i + 6) + ")").each(function() {
          var alert, winner;
          column += "" + ($(this).attr('class')) + ",";
          if (column === 'marked X animated bounce,marked X animated bounce,marked X animated bounce,' || column === 'marked O animated bounce,marked O animated bounce,marked O animated bounce,') {
            winner = $(this).text() === 'X' ? 'P1' : 'P2';
            store.set(winner, store.get(winner) + 1);
            alert = "<div class='alert alert-info alert-dismissable'>		              <button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>		              The winner is " + winner + "		            </div>";
            $('.well').after(alert);
            $('.well span').text("P1(" + (store.get('P1')) + ") x P2(" + (store.get('P2')) + ")");
            return $(this).trigger('clearGame');
          }
        });
        if ($(this).prev().hasClass('marked') && $(this).next().hasClass('marked') && $(this).hasClass('marked')) {
          if (($(this).prev().attr('class') === $(this).next().attr('class')) && ($(this).prev().attr('class') === $(this).attr('class'))) {
            winner = $(this).text() === 'X' ? 'P1' : 'P2';
            store.set(winner, store.get(winner) + 1);
            alert = "<div class='alert alert-info alert-dismissable'>		              <button type='button' class='close' data-dismiss='alert' aria-hidden='true'>&times;</button>		              The winner is " + winner + "		            </div>";
            $('.well').after(alert);
            $('.well span').text("P1(" + (store.get('P1')) + ") x P2(" + (store.get('P2')) + ")");
            return $(this).trigger('clearGame');
          }
        }
      });
      if ($('td.marked').length === 9) {
        alert('The game is tied!');
        return $(this).trigger('clearGame');
      }
    };
    Game.prototype.mark = function() {
      var turn;
      if (!$(this).hasClass('marked')) {
        turn = window.turn || 'X';
        $(this).text(turn);
        $(this).addClass("marked " + turn + " animated bounce");
        turn = turn === 'X' ? 'O' : 'X';
        window.turn = turn;
        $(this).trigger('marked');
      }
    };
    return Game;
  });

}).call(this);
